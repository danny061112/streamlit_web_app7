"""

🍀 当ファイルは、page6_1.py ページ用のPythonコードファイル
 
   
   🔷🔶当ファイルでは、画面上に以下の内容を表示する 🔷🔶
   
      -------------------------------------------------------------------
        👇 データ分析ウィジェット 👇
      --------------------------------------------------------------------
      
      >>> pands を使って「表・グラフ」表示 <<<
      
          1, データフレーム（スクロールバー付き）
          2, データテーブル（スクロールバー無し）
          3, 折れ線グラフ（複数データ・単数データ）
          4, 棒グラフ（複数データ・単数データ）
      
      
      >>> matplotlib を使って「グラフ」表示 <<<
      
          5, 折れ線グラフ（複数データ・単数データ）
 
 
""" 

# ====================================================================
# ライブラリをインポート
#
#  import ▲▲▲▲ : --------------> これはモジュール全体をインポートするときに使う
#
#   例）import math
#       こうすると、math モジュール内の全ての関数を使うことができる
#
#  from ●●●●  import ▲▲▲▲ : ---> これは特定の関数やクラスだけをインポートしたいときに使う
#
#   例）from math import sqrt
#      こうすると、math モジュールから、sqrt 関数だけをインポートできて、
# 　　　コードの中でそのまま sqrt() として使える
#
# ====================================================================
import streamlit as st              # Streamlitライブラリをインポート
import pandas as pd                 # pandas ライブラリをインポート
import matplotlib.pyplot as plt     # matplotlib ライブラリをインポート


# ========================================================================
#  データ分析関連
# ========================================================================

# ------------------------------------------------------------------------
#  pandas を用いてデータ表示
#
#  🔵平均気温データ分析
#
#  👉引数 pd.read_csv()
#   　・第１引数：csvデータ 
#     ・第２引数：header=None    → これを引数に指定するとヘッダー部分がデータに無し
#                                 データにヘッダー部分がある場合は、これを引数に指定しない          
#     ・第３引数：index_col='月' → インデックスとして使用する列番号または列名を指定
#
#  👉引数 st.dataframe()
#   　・第１引数：df →  データフレームオブジェクト        
#
# ------------------------------------------------------------------------


# ........................................................................
# 🔴 CSVデータの１列目にヘッダー有無
#
#    🔵ヘッダー部分有り         🔵ヘッダー部分無し
#
#      月,2021年,2020年           1,5.4,7.1
#      1,5.4,7.1                 2,8.5,8.3
#      2,8.5,8.3                 3,12.8,10.7
#      3,12.8,10.7
#
#
#     ✔ 平均気温.csvというCSVファイルを読み込み、
#        1列目（0ベースのインデックスなので、実際のファイルでは2列目）
#        をインデックスとして設定する
#
#     ✔ index_col=0は1列目（1行目）を意味する
#  　    CSVファイルのカラムは0ベースでカウントされるため、
#        index_col=0と指定すると1列目をインデックスとして使用することになる
#
#     ✔ 1列目に見出し（ヘッダー）がなく、データそのものが入っている場合でも、
#        pandasのread_csv()メソッドで適切に処理できる
#        そのためには「header=None」引数を使用する
#        これにより「pandasは先頭行をヘッダーとしてではなくデータとして読み込める」
#
#　　　✔「列を基準にして行のインデックスを設定する」という意味になることに注意
#
#.........................................................................

# >>> １列目（１行目）に「ヘッダー部分あり」 月の列（行）から読み込む <<<
#
#  🔴重要🔴
#      ・このファイルは、main_app6.py から呼び出されるので
#        ファイルは main_app6.pyから見た相対パスで指定する

df = pd.read_csv('./data/平均気温.csv', index_col='月')                  # pandasのread_csv()メソッドを呼び出す                 
                                                                        # df オブジェクトには、データフレームを代入される

# >>> １列目（１行目）に「ヘッダー部分なし」 １列（行目）から読み込む <<<
#df = pd.read_csv('./data/平均気温.csv', header=None, index_col=0)      # pandasのread_csv()メソッドを呼び出す                 
                                                                        # df オブジェクトには、データフレームを代入される

# ................................................................
# >>> 🚀 データフレーム表示（テーブルをスクロールバー付きで表示）  <<<
# ................................................................
st.dataframe(df)                                                         # st.dataframe() メソッドを呼び出す


# ................................................................
# >>> 🚀 テーブル表示（テーブル全体を表示） <<<
#.................................................................
st.table(df)                                                             # st.table()メソッドを呼び出す   
    
    
# ................................................................
# >>> 🚀 折れ線グラフ表示 <<<
# ................................................................

# >>> 複数データ表示 <<<
st.line_chart(df)                                                        # st.line_chart()メソッドを呼び出す

# >>> 単数データ表示 <<<
#st.line_chart(df['2021年'])


# ................................................................
# >>> 🚀 棒グラフ表示 <<<
# ................................................................

# >>> 複数データ表示 <<<
#st.bar_chart(df)                                                        # st.bar_chart()メソッドを呼び出す

# >>> 単数データ表示 <<<
st.bar_chart(df['2021年'])                                               # st.bar_chart()メソッドを呼び出す



# ------------------------------------------------------------------------
#  matplotlib を用いてデータ表示
#
#  ※ Python のグラフ描画ライブラリ（matplotlib の fig と ax）オブジェクトを使って
#     描写したグラフを Web画面上表示する
#
#
#  👉引数 ax.plot() 
#   　・第１引数：df.index        →  dfは、pandasのデータフレーム
#                                   df.indexはデータフレームのインデックス（行ラベル）
#                                   このインデックスは通常、行番号や日付、カテゴリなどが含まれる
#                                   ※ この引数は、x軸のデータとして使用される
#
#     ・第２引数：df['2021年']    →  df['2021年']は、データフレームの'2021年'を使用する
#                                   ※ この引数は、y軸のデータとして使用される
#
#
#  👉引数 ax.set_title() 
#   　・第１引数：'matplotlib graph'  →  グラフのタイトル
#
#
#  👉引数 st.pyplot() 
#   　・第１引数：fig             →  フィギアオブジェクトを指定する
#
# ------------------------------------------------------------------------

fig, ax = plt.subplots()               # matplotlib の subplots()メソッドを呼び出し、
                                       # fig:フィギアオブジェクト と ax:アクシスオブジェクトを作成

ax.plot(df.index, df['2021年'])        # ax.plot()メソッドを呼び出す  
                                       # データフレームのインデックスを x 軸に、
                                       # '2021年' 列のデータを y 軸にプロット
                                        
ax.set_title('matplotlib graph')       # グラフのタイトルを設定
st.pyplot(fig)                         #  Streamlit の st.pyplot()メソッドを呼び出し、プロットを表示

